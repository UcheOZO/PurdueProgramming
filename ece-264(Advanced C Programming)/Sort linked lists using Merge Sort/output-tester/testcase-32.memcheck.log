==48200== Memcheck, a memory error detector
==48200== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==48200== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==48200== Command: ./a.out 31
==48200== Parent PID: 48199
==48200== 
--48200-- 
--48200-- Valgrind options:
--48200--    --tool=memcheck
--48200--    --leak-check=full
--48200--    --verbose
--48200--    --log-file=memcheck.log
--48200-- Contents of /proc/version:
--48200--   Linux version 2.6.32-431.23.3.el6.x86_64 (mockbuild@x86-027.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Wed Jul 16 06:12:23 EDT 2014
--48200-- Arch and hwcaps: AMD64, amd64-sse3-cx16-avx
--48200-- Page sizes: currently 4096, max supported 4096
--48200-- Valgrind library directory: /usr/lib64/valgrind
--48200-- Reading syms from /tmp/.3YIQcR/a.out
--48200-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--48200--    object doesn't have a dynamic symbol table
--48200-- Reading syms from /lib64/ld-2.12.so
--48200--   Considering /usr/lib/debug/.build-id/3b/fa45bce0e82e1d90d37a0cc8630f97f2003bf5.debug ..
--48200--   .. build-id is valid
--48200-- Scheduler: using generic scheduler lock implementation.
--48200-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==48200== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-48200-by-jain98-on-ecegrid-thin5.ecn.purdue.edu
==48200== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-48200-by-jain98-on-ecegrid-thin5.ecn.purdue.edu
==48200== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-48200-by-jain98-on-ecegrid-thin5.ecn.purdue.edu
==48200== 
==48200== TO CONTROL THIS PROCESS USING vgdb (which you probably
==48200== don't want to do, unless you know exactly what you're doing,
==48200== or are doing some strange experiment):
==48200==   /usr/lib64/valgrind/../../bin/vgdb --pid=48200 ...command...
==48200== 
==48200== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==48200==   /path/to/gdb ./a.out
==48200== and then give GDB the following command
==48200==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=48200
==48200== --pid is optional if only one valgrind process is running
==48200== 
--48200-- REDIR: 0x398ac17610 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--48200-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--48200-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--48200-- REDIR: 0x398ac17480 (index) redirected to 0x4a07c30 (index)
--48200-- REDIR: 0x398ac17500 (strcmp) redirected to 0x4a08570 (strcmp)
--48200-- Reading syms from /lib64/libc-2.12.so
--48200--   Considering /usr/lib/debug/.build-id/73/3ad3a438b5a695f7a63a77413f9b2c8c94e8e6.debug ..
--48200--   .. build-id is valid
--48200-- REDIR: 0x398b084cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--48200-- REDIR: 0x398b086f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--48200-- REDIR: 0x398b082c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--48200-- REDIR: 0x398b07a640 (malloc) redirected to 0x4a069ac (malloc)
--48200-- REDIR: 0x398b081160 (__GI_strlen) redirected to 0x4a07fb0 (__GI_strlen)
--48200-- REDIR: 0x398b089670 (memcpy) redirected to 0x4a08b60 (memcpy)
--48200-- REDIR: 0x398b084500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--48200-- REDIR: 0x398b08aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--48200-- REDIR: 0x398b07b520 (free) redirected to 0x4a063a9 (free)
--48200-- REDIR: 0x398b07f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--48200-- REDIR: 0x398b128420 (__strcmp_sse42) redirected to 0x4a084d0 (strcmp)
==48200== 
==48200== HEAP SUMMARY:
==48200==     in use at exit: 72 bytes in 8 blocks
==48200==   total heap usage: 17 allocs, 9 frees, 176 bytes allocated
==48200== 
==48200== Searching for pointers to 8 not-freed blocks
==48200== Checked 64,552 bytes
==48200== 
==48200== 72 (16 direct, 56 indirect) bytes in 1 blocks are definitely lost in loss record 8 of 8
==48200==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==48200==    by 0x400B59: List_createNode_sol (<stdin>:19)
==48200==    by 0x400F96: List_create (test_support_functions.c:48)
==48200==    by 0x401197: make_list (test_support_functions.c:77)
==48200==    by 0x401F71: tests_List_sort (test_List_sort.c:106)
==48200==    by 0x4021C5: main (<stdin>:159)
==48200== 
==48200== LEAK SUMMARY:
==48200==    definitely lost: 16 bytes in 1 blocks
==48200==    indirectly lost: 56 bytes in 7 blocks
==48200==      possibly lost: 0 bytes in 0 blocks
==48200==    still reachable: 0 bytes in 0 blocks
==48200==         suppressed: 0 bytes in 0 blocks
==48200== 
==48200== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
--48200-- 
--48200-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--48200-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==48200== 
==48200== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
