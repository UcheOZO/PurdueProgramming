==769== Memcheck, a memory error detector
==769== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==769== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==769== Command: ./pa12
==769== Parent PID: 4694
==769== 
--769-- 
--769-- Valgrind options:
--769--    --tool=memcheck
--769--    --leak-check=full
--769--    --verbose
--769--    --log-file=memcheck.log
--769-- Contents of /proc/version:
--769--   Linux version 2.6.32-504.1.3.el6.x86_64 (mockbuild@x86-022.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-9) (GCC) ) #1 SMP Fri Oct 31 11:37:10 EDT 2014
--769-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--769-- Page sizes: currently 4096, max supported 4096
--769-- Valgrind library directory: /usr/lib64/valgrind
--769-- Reading syms from /home/shay/a/jain98/ECE264/solutions/PA12/pa12
--769-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--769--    object doesn't have a dynamic symbol table
--769-- Reading syms from /lib64/ld-2.12.so
--769--   Considering /usr/lib/debug/.build-id/3b/fa45bce0e82e1d90d37a0cc8630f97f2003bf5.debug ..
--769--   .. build-id is valid
--769-- Scheduler: using generic scheduler lock implementation.
--769-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==769== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-769-by-jain98-on-ecegrid-thin3.ecn.purdue.edu
==769== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-769-by-jain98-on-ecegrid-thin3.ecn.purdue.edu
==769== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-769-by-jain98-on-ecegrid-thin3.ecn.purdue.edu
==769== 
==769== TO CONTROL THIS PROCESS USING vgdb (which you probably
==769== don't want to do, unless you know exactly what you're doing,
==769== or are doing some strange experiment):
==769==   /usr/lib64/valgrind/../../bin/vgdb --pid=769 ...command...
==769== 
==769== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==769==   /path/to/gdb ./pa12
==769== and then give GDB the following command
==769==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=769
==769== --pid is optional if only one valgrind process is running
==769== 
--769-- REDIR: 0x3968617610 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--769-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--769-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--769-- REDIR: 0x3968617480 (index) redirected to 0x4a07c30 (index)
--769-- REDIR: 0x3968617500 (strcmp) redirected to 0x4a08570 (strcmp)
--769-- Reading syms from /lib64/libm-2.12.so
--769--   Considering /usr/lib/debug/.build-id/ba/a4d2fbb45b33028e58c6c4524d5f0d69c0fd60.debug ..
--769--   .. build-id is valid
--769-- Reading syms from /lib64/libpthread-2.12.so
--769--   Considering /usr/lib/debug/.build-id/17/4be4cad6b9cde9463a1ed403a8a45667042f1b.debug ..
--769--   .. build-id is valid
--769-- Reading syms from /lib64/libc-2.12.so
--769--   Considering /usr/lib/debug/.build-id/73/3ad3a438b5a695f7a63a77413f9b2c8c94e8e6.debug ..
--769--   .. build-id is valid
--769-- REDIR: 0x3968a84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--769-- REDIR: 0x3968a86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--769-- REDIR: 0x3968a81160 (__GI_strlen) redirected to 0x4a07fb0 (__GI_strlen)
--769-- REDIR: 0x3968a82c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--769-- REDIR: 0x3968a7a640 (malloc) redirected to 0x4a069ac (malloc)
--769-- REDIR: 0x3968a8aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
==769== Conditional jump or move depends on uninitialised value(s)
==769==    at 0x3968A47E2C: vfprintf (vfprintf.c:1641)
==769==    by 0x3968A4F189: printf (printf.c:35)
==769==    by 0x4010CC: main (answer12.c:199)
==769== 
--769-- REDIR: 0x3968a84500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--769-- REDIR: 0x3968a7b520 (free) redirected to 0x4a063a9 (free)
==769== 
==769== HEAP SUMMARY:
==769==     in use at exit: 0 bytes in 0 blocks
==769==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated
==769== 
==769== All heap blocks were freed -- no leaks are possible
==769== 
==769== Use --track-origins=yes to see where uninitialised values come from
==769== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
==769== 
==769== 1 errors in context 1 of 1:
==769== Conditional jump or move depends on uninitialised value(s)
==769==    at 0x3968A47E2C: vfprintf (vfprintf.c:1641)
==769==    by 0x3968A4F189: printf (printf.c:35)
==769==    by 0x4010CC: main (answer12.c:199)
==769== 
--769-- 
--769-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--769-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==769== 
==769== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
