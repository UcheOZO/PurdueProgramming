Breakpoint 1 at 0x400a7d: file search.c, line 14.
Starting program: /home/shay/a/jain98/ECE264/solutions/PA10/search Starbucks

Breakpoint 1, main (argc=2, argv=0x7fffffffe508) at search.c:14
14		if((argc + 2) / 3 == 0) {
20		struct YelpDataBST* bst = create_business_bst(businesses_path, reviews_path);
23		int num_locations=0, num_address_chars=0, num_reviews=0, num_review_chars=0, total_stars=0;
26		for(arg_idx = 1; arg_idx < argc; arg_idx += 3) {
29			char* name     = argv[arg_idx];
30			char* state    = arg_idx + 1 < argc ? argv[arg_idx + 1] : "";
31			char* zip_code = arg_idx + 2 < argc ? argv[arg_idx + 2] : "";
34			int query_num = (arg_idx + 2) / 3;
35			printf("================================================================================\n");
36			printf("QUERY #%d:  name=\"%s\"  state=\"%s\"  zip_code=\"%s\"\n\n", query_num, name, state, zip_code);
40			char* state_or_null    = state[0]    == '\0' ? NULL : state;    // change to NULL if ""
41			char* zip_code_or_null = zip_code[0] == '\0' ? NULL : zip_code; // change to NULL if ""
42			struct Business *b = get_business_reviews(bst, name, state_or_null, zip_code_or_null);
get_business_reviews (bst=0x604010, name=0x7fffffffe86a "Starbucks", state=0x0, zip_code=0x0) at answer10.c:383
383	{
385	  char** strArr=NULL;
388	  int ctr=0;//ctr var
389	  int ctr1=0; //counter variable
390	  int num_loc_actual=0; //num_loc incase of state and zip_code != NULL
391	  struct Business* retnode=create_business(name); //node to be returned by the function
392	  struct Location* retloc=NULL; //array of locations
393	  struct Review* retrev=NULL; //array of reviews
394	  Bus* node=NULL; //the bst node of the name passed to the function
396	  fp=bst->fp1;
397	  node=tree_search_name(name,bst->b);
399	  loc* loc_ptr=node->locations;
401	  num_loc=find_num_locations(node->locations); //find the number of locations for the given business node
find_num_locations (locations=0x604f50) at answer10.c:274
274	  int i=0;	
275	  while(locations!=NULL)
$1 = (loc *) 0x604f50
277	      i++;
278	      locations=locations->next;
275	  while(locations!=NULL)
$2 = (loc *) 0x0
280	  return i;
281	}
get_business_reviews (bst=0x604010, name=0x7fffffffe86a "Starbucks", state=0x0, zip_code=0x0) at answer10.c:403
403	  long offset_rev[num_loc];
$3 = (loc *) 0x604f50
$4 = (struct locs *) 0x0
A debugging session is active.

	Inferior 1 [process 27690] will be killed.

Quit anyway? (y or n) 